PREFIX : @schemaUri
CONSTRUCT{
    ?constituencyGroup
        a :ConstituencyGroup ;
        :constituencyGroupName ?name ;
        :constituencyGroupEndDate ?endDate ;
        :constituencyGroupStartDate ?startDate ;
        :constituencyGroupHasHouseSeat ?seat .
    ?seat
        a :HouseSeat ;
        :houseSeatHasSeatIncumbency ?seatIncumbency .
    ?seatIncumbency
        a :SeatIncumbency ;
        :parliamentaryIncumbencyHasMember ?member ;
        :ParliamentaryIncumbencyHasEndDate ?seatIncumbencyEndDate .
    ?member
        a :Person;
        :personGivenName ?givenName ;
        :personFamilyName ?familyName ;
        <http://example.com/F31CBD81AD8343898B49DC65743F0BDF> ?displayAs ;
        :partyMemberHasPartyMembership ?partyMembership .
    ?partyMembership
        a :PartyMembership ;
        :partyMembershipHasParty ?party .
    ?party
        a :Party ;
        :partyName ?partyName .
    _:x :value ?firstLetter .

}
WHERE {
    { SELECT * WHERE {
        ?constituencyGroup a :ConstituencyGroup .
        OPTIONAL { ?constituencyGroup :constituencyGroupName ?name . }
        OPTIONAL { ?constituencyGroup :constituencyGroupEndDate ?endDate . }
        OPTIONAL { ?constituencyGroup :constituencyGroupStartDate ?startDate . }
        OPTIONAL {
            ?constituencyGroup :constituencyGroupHasHouseSeat ?seat .
            ?seat :houseSeatHasSeatIncumbency ?seatIncumbency .
            OPTIONAL { ?seatIncumbency :ParliamentaryIncumbencyHasEndDate ?seatIncumbencyEndDate . }
			FILTER NOT EXISTS { ?seatIncumbency a :PastParliamentaryIncumbency . }
			FILTER NOT EXISTS {
				?seatIncumbency :incumbencyHasIncumbencyInterruption ?interruption.
				FILTER NOT EXISTS {
					?interruption :endDate ?end.
				}
			}             ?seatIncumbency :parliamentaryIncumbencyHasMember ?member .
            OPTIONAL { ?member :personGivenName ?givenName . }
            OPTIONAL { ?member :personFamilyName ?familyName . }
            OPTIONAL { ?member <http://example.com/F31CBD81AD8343898B49DC65743F0BDF> ?displayAs } .
            ?member :partyMemberHasPartyMembership ?partyMembership .
            ?partyMembership :partyMembershipHasParty ?party .
            ?party :partyName ?partyName .
        }
        FILTER STRSTARTS(LCASE(?name), LCASE(@initial))
       }
    }
    UNION {
		SELECT DISTINCT ?firstLetter WHERE {
            ?s a :ConstituencyGroup ;
          		:constituencyGroupName ?constituencyName.

              BIND(ucase(SUBSTR(?constituencyName, 1, 1)) as ?firstLetter)
        }
	}
}
