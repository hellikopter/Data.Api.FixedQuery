PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX : @schemaUri
CONSTRUCT {
    ?person
        a :Person ;
        :personGivenName ?givenName ;
        :personFamilyName ?familyName ;
        :memberHasMemberImage ?image ;
        <http://example.com/F31CBD81AD8343898B49DC65743F0BDF> ?displayAs ;
        <http://example.com/A5EE13ABE03C4D3A8F1A274F57097B6C> ?listAs ;
        :memberHasParliamentaryIncumbency ?seatIncumbency ;
        :partyMemberHasPartyMembership ?partyMembership .
    ?image
        a :MemberImage .
    ?seatIncumbency
        a :SeatIncumbency ;
        :seatIncumbencyHasHouseSeat ?houseSeat ;
        :parliamentaryIncumbencyStartDate ?incStartDate ;
        :parliamentaryIncumbencyEndDate ?seatIncumbencyEndDate .
    ?houseSeat
        a :HouseSeat ;
        :houseSeatHasHouse ?house ;
        :houseSeatHasConstituencyGroup ?constituencyGroup .
   ?constituencyGroup
        a :ConstituencyGroup;
        :constituencyGroupName ?constituencyName .
    ?partyMembership
        a :PartyMembership ;
        :partyMembershipHasParty ?party ;
        :partyMembershipStartDate ?pmStartDate ;
        :partyMembershipEndDate ?partyMembershipEndDate .
    ?party
        a :Party ;
        :partyName ?partyName .
     ?parliament
         a :ParliamentPeriod ;
         :parliamentPeriodStartDate ?parliamentStartDate ;
         :parliamentPeriodEndDate ?parliamentEndDate ;
         :parliamentPeriodNumber ?parliamentNumber ;
         :parliamentPeriodHasImmediatelyFollowingParliamentPeriod ?nextParliament ;
    	 :parliamentPeriodHasImmediatelyPreviousParliamentPeriod ?previousParliament ;
         :count ?memberCount .
    ?house
        a :House ;
        :houseName ?houseName .
    _:x :value ?firstLetter .
}
WHERE {
    { SELECT * WHERE {
             BIND(@parliament_id AS ?parliament)
             BIND(@party_id AS ?party)
	?party
         a :Party ;
         :partyName ?partyName .
    ?parliament
        a :ParliamentPeriod ;
        :parliamentPeriodStartDate ?parliamentStartDate ;
        :parliamentPeriodNumber ?parliamentNumber .
    OPTIONAL { ?parliament :parliamentPeriodEndDate ?parliamentEndDate . }
    OPTIONAL { ?parliament :parliamentPeriodHasImmediatelyFollowingParliamentPeriod ?nextParliament . }
   	OPTIONAL { ?parliament :parliamentPeriodHasImmediatelyPreviousParliamentPeriod ?previousParliament . }
    OPTIONAL {
        ?parliament :parliamentPeriodHasSeatIncumbency ?seatIncumbency .
        ?seatIncumbency :parliamentaryIncumbencyHasMember ?person ;
                        :parliamentaryIncumbencyStartDate ?seatIncumbencyStartDate ;
                        :seatIncumbencyHasHouseSeat ?houseSeat .
        ?houseSeat :houseSeatHasHouse ?house .
        ?house :houseName ?houseName .
        OPTIONAL { ?seatIncumbency :parliamentaryIncumbencyEndDate ?seatIncumbencyEndDate . }
        OPTIONAL {
            ?houseSeat :houseSeatHasConstituencyGroup ?constituencyGroup .
            ?constituencyGroup :constituencyGroupName ?constituencyName .
        }
        OPTIONAL { ?person :personGivenName ?givenName . }
        OPTIONAL { ?person :personFamilyName ?familyName . }
        OPTIONAL { ?person :memberHasMemberImage ?image . }
        OPTIONAL { ?person <http://example.com/F31CBD81AD8343898B49DC65743F0BDF> ?displayAs } .
        ?person <http://example.com/A5EE13ABE03C4D3A8F1A274F57097B6C> ?listAs .
        ?person :partyMemberHasPartyMembership ?partyMembership .
        ?partyMembership :partyMembershipHasParty ?party ;
        				 :partyMembershipStartDate ?partyMembershipStartDate .
        OPTIONAL { ?partyMembership :partyMembershipEndDate ?partyMembershipEndDate . }

        BIND(xsd:dateTime(?partyMembershipEndDate) AS ?pmEndDateTime)
        BIND(xsd:dateTime(?seatIncumbencyEndDate) AS ?incEndDateTime)
        BIND(xsd:dateTime(?seatIncumbencyStartDate) AS ?incStartDate)
        BIND(xsd:dateTime(?partyMembershipStartDate) AS ?pmStartDate)

        BIND(COALESCE(?pmEndDateTime,now()) AS ?pmEndDate)
        BIND(COALESCE(?incEndDateTime,now()) AS ?incEndDate)
        FILTER (
        	(?pmStartDate <= ?incStartDate && ?pmEndDate > ?incStartDate) ||
        	(?pmStartDate >= ?incStartDate && ?pmStartDate < ?incEndDate)
		)
        FILTER STRSTARTS(LCASE(?listAs), LCASE(@initial))
      }
     }
    }
  UNION {
	SELECT ?parliament (COUNT(DISTINCT(?person)) AS ?memberCount) WHERE {
             BIND(@parliament_id AS ?parliament)
             BIND(@party_id AS ?party)

        ?parliament a :ParliamentPeriod .
        ?party a :Party .
        OPTIONAL {
            ?parliament :parliamentPeriodHasSeatIncumbency ?seatIncumbency .
         	?seatIncumbency :parliamentaryIncumbencyHasMember ?person ;
                            :parliamentaryIncumbencyStartDate ?seatIncumbencyStartDate .
            OPTIONAL { ?seatIncumbency :parliamentaryIncumbencyEndDate ?seatIncumbencyEndDate . }

            ?person :partyMemberHasPartyMembership ?partyMembership .
        	?partyMembership :partyMembershipHasParty ?party ;
        				 	:partyMembershipStartDate ?partyMembershipStartDate .
        	OPTIONAL { ?partyMembership :partyMembershipEndDate ?partyMembershipEndDate . }

            BIND(xsd:dateTime(?partyMembershipEndDate) AS ?pmEndDateTime)
        	BIND(xsd:dateTime(?seatIncumbencyEndDate) AS ?incEndDateTime)
        	BIND(xsd:dateTime(?seatIncumbencyStartDate) AS ?incStartDate)
        	BIND(xsd:dateTime(?partyMembershipStartDate) AS ?pmStartDate)

        	BIND(COALESCE(?pmEndDateTime,now()) AS ?pmEndDate)
        	BIND(COALESCE(?incEndDateTime,now()) AS ?incEndDate)
        	FILTER (
        		(?pmStartDate <= ?incStartDate && ?pmEndDate > ?incStartDate) ||
        		(?pmStartDate >= ?incStartDate && ?pmStartDate < ?incEndDate)
			)
        }
      }
    GROUP BY ?parliament
    }
    UNION {
        SELECT DISTINCT ?firstLetter WHERE {
             BIND(@parliament_id AS ?parliament)
             BIND(@party_id AS ?party)

        ?parliament a :ParliamentPeriod.
        ?party a :Party.
        ?parliament :parliamentPeriodHasSeatIncumbency ?seatIncumbency .
        ?seatIncumbency :parliamentaryIncumbencyHasMember ?person ;
    					:parliamentaryIncumbencyStartDate ?seatIncumbencyStartDate.
        OPTIONAL { ?seatIncumbency :parliamentaryIncumbencyEndDate ?seatIncumbencyEndDate . }
        ?person :partyMemberHasPartyMembership ?partyMembership.
        ?partyMembership :partyMembershipHasParty ?party ;
                         :partyMembershipStartDate ?partyMembershipStartDate.
        OPTIONAL { ?partyMembership :partyMembershipEndDate ?partyMembershipEndDate . }

        BIND(xsd:dateTime(?partyMembershipEndDate) AS ?pmEndDateTime)
        BIND(xsd:dateTime(?seatIncumbencyEndDate) AS ?incEndDateTime)
        BIND(xsd:dateTime(?seatIncumbencyStartDate) AS ?incStartDate)
        BIND(xsd:dateTime(?partyMembershipStartDate) AS ?pmStartDate)

        BIND(COALESCE(?pmEndDateTime, now()) AS ?pmEndDate)
        BIND(COALESCE(?incEndDateTime, now()) AS ?incEndDate)
        FILTER(
        	(?pmStartDate <= ?incStartDate && ?pmEndDate > ?incStartDate) ||
        	(?pmStartDate >= ?incStartDate && ?pmStartDate < ?incEndDate)
		)

        ?person <http://example.com/A5EE13ABE03C4D3A8F1A274F57097B6C> ?listAs .
        BIND(ucase(SUBSTR(?listAs, 1, 1)) as ?firstLetter)
        }
    }
}
